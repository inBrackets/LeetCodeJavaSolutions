"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","3","","org.example.problems.MaximumSumOfTwoNonOverlappingSubarraysTest","","org.example.problems.MaximumSumOfTwoNonOverlappingSubarraysTest","maxSumTwoNoOverlap_3ms","maxSumTwoNoOverlap_3ms(int[], int, int, int) Case 1: nums=[0, 6, 5, 2, 2, 5, 1, 9, 4], firstLen=1, secondLen=2, output=20",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","3","","org.example.problems.CardFlippingGameTest","","org.example.problems.CardFlippingGameTest","testFlipgame_6ms","testFlipgame_6ms(int[], int[], int) Case 1: fronts=[1, 2, 4, 4, 7], backs=[1, 3, 4, 1, 3], output=2",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","3","","org.example.problems.InsertIntervalTest","","org.example.problems.InsertIntervalTest","testInsert_1ms","testInsert_1ms(int[][], int[], int[][]) Case 1: intervals=[[1, 3], [6, 9]], newInterval=[2, 5], output=[[1, 5], [6, 9]]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","5","","org.example.problems.MeetingSchedulerTest","","org.example.problems.MeetingSchedulerTest","minAvailableDuration","minAvailableDuration(int[][], int[][], int, List) Case 1: slots1=[[10, 50], [60, 120], [140, 210]], slots2=[[0, 15], [60, 70]], duration=8, output=[60, 68]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.FindPivotIndexTest","","org.example.problems.FindPivotIndexTest","testPivotIndex_1ms","testPivotIndex_1ms(int[], int) Case 2: nums=[1, 2, 3], output=-1",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.MaxProductOfThreeNumbersTest","","org.example.problems.MaxProductOfThreeNumbersTest","maximumProduct_3ms","maximumProduct_3ms(int[], int) Case 2: num=[1, 2, 3, 4], output=24",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.ArrayPartitionTest","","org.example.problems.ArrayPartitionTest","testArrayPairSum_13ms","testArrayPairSum_13ms(int[], int) Case 2: nums=[6, 2, 6, 5, 1, 2], output=9",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.LongestLineOfConsecutiveOneInMatrixTest","","org.example.problems.LongestLineOfConsecutiveOneInMatrixTest","testLongestLine","testLongestLine(int[][], int) Case 1: matrix=[[1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1]], output=9",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.MatrixCellsInDistanceOrderTest","","org.example.problems.MatrixCellsInDistanceOrderTest","testAllCellsDistOrder_24ms","testAllCellsDistOrder_24ms(int, int, int, int, int[][]) Case 2: rows=2, cols=2, rCenter=0, cCenter=1, output=[[0, 1], [0, 0], [1, 1], [1, 0]]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.FirstMissingPositiveTest","","org.example.problems.FirstMissingPositiveTest","testFirstMissingPositive_13ms","testFirstMissingPositive_13ms(int[], int) Case 2: nums=[3, 4, -1, 1], output=2",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.FirstMissingPositiveTest","","org.example.problems.FirstMissingPositiveTest","testFirstMissingPositive_13ms","testFirstMissingPositive_13ms(int[], int) Case 3: nums=[7, 8, 9, 11, 12], output=1",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.ImageSmootherTest","","org.example.problems.ImageSmootherTest","imageSmoother_9ms","imageSmoother_9ms(int[][], int[][]) Case 2: img=[[100, 200, 100], [200, 50, 200], [100, 200, 100]], output=[[137, 141, 137], [141, 138, 141], [137, 141, 137]]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","28","","org.allure.junit5_github_actions.StepTest","","org.allure.junit5_github_actions.StepTest","lambdaStepTest","lambdaStepTest()",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","4","","org.example.problems.ArrayNestingTest","","org.example.problems.ArrayNestingTest","testArrayNesting_4ms","testArrayNesting_4ms(int[], int) Case 1: nums=[5, 4, 0, 3, 1, 6, 2], output=4",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.CardFlippingGameTest","","org.example.problems.CardFlippingGameTest","testFlipgame_26ms","testFlipgame_26ms(int[], int[], int) Case 1: fronts=[1, 2, 4, 4, 7], backs=[1, 3, 4, 1, 3], output=2",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.MeetingRoomsTest","","org.example.problems.MeetingRoomsTest","testCanAttendMeetings","testCanAttendMeetings(Interval[], boolean) Case 1: intervals=[org.example.problems.MeetingRooms$Interval@51e8d066, org.example.problems.MeetingRooms$Interval@5333f08f, org.example.problems.MeetingRooms$Interval@27898e13], output=false",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.MergeSortedArrayTest","","org.example.problems.MergeSortedArrayTest","merge_1ms","merge_1ms(int[], int, int[], int, int[]) Case 1: nums1=[1], m=1, nums2=[], n=0, output=[1]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","29","","org.example.problems.AddToArrayFormOfIntegerTest","","org.example.problems.AddToArrayFormOfIntegerTest","testAddToArrayForm_89ms","testAddToArrayForm_89ms(int[], int, List) Case 1: num=[1, 2, 0, 0], k=34, output=[1, 2, 3, 4]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.ArrayPartitionTest","","org.example.problems.ArrayPartitionTest","testArrayPairSum_13ms","testArrayPairSum_13ms(int[], int) Case 1: nums=[1, 4, 3, 2], output=4",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","7","","org.example.problems.MergeSortedArrayTest","","org.example.problems.MergeSortedArrayTest","merge_0ms","merge_0ms(int[], int, int[], int, int[]) Case 1: nums1=[1], m=1, nums2=[], n=0, output=[1]",""
"skipped","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","0","","org.example.problems.FindTheCelebrityTest","","org.example.problems.FindTheCelebrityTest","testFindCelebrity","testFindCelebrity(int, int)",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.MatrixCellsInDistanceOrderTest","","org.example.problems.MatrixCellsInDistanceOrderTest","testAllCellsDistOrder_4ms","testAllCellsDistOrder_4ms(int, int, int, int, int[][]) Case 3: rows=2, cols=3, rCenter=1, cCenter=2, output=[[1, 2], [0, 2], [1, 1], [0, 1], [1, 0], [0, 0]]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.LargestTimeForGivenDigitsTest","","org.example.problems.LargestTimeForGivenDigitsTest","testLargestTimeFromDigits","testLargestTimeFromDigits(int[], String) Case 5: arr=[5, 5, 5, 5], output=",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.FirstMissingPositiveTest","","org.example.problems.FirstMissingPositiveTest","testFirstMissingPositive_2ms","testFirstMissingPositive_2ms(int[], int) Case 2: nums=[3, 4, -1, 1], output=2",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.ArrayNestingTest","","org.example.problems.ArrayNestingTest","testArrayNesting_4ms","testArrayNesting_4ms(int[], int) Case 2: nums=[0, 1, 2], output=1",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.FruitIntoBasketsTest","","org.example.problems.FruitIntoBasketsTest","testTotalFruit_50ms","testTotalFruit_50ms(int[], int) Case 1: fruits=[1, 2, 1], output=3",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.MaxProductOfThreeNumbersTest","","org.example.problems.MaxProductOfThreeNumbersTest","maximumProduct_3ms","maximumProduct_3ms(int[], int) Case 1: num=[1, 2, 3], output=6",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.LargestTimeForGivenDigitsTest","","org.example.problems.LargestTimeForGivenDigitsTest","testLargestTimeFromDigits","testLargestTimeFromDigits(int[], String) Case 3: arr=[9, 9, 1, 5], output=19:59",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.FruitIntoBasketsTest","","org.example.problems.FruitIntoBasketsTest","testTotalFruit_50ms","testTotalFruit_50ms(int[], int) Case 3: fruits=[1, 2, 3, 2, 2], output=4",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.FirstMissingPositiveTest","","org.example.problems.FirstMissingPositiveTest","testFirstMissingPositive_2ms","testFirstMissingPositive_2ms(int[], int) Case 1: nums=[1, 2, 0], output=3",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.MaxConsecutiveOnesTest","","org.example.problems.MaxConsecutiveOnesTest","testFindMaxConsecutiveOnes_3ms","testFindMaxConsecutiveOnes_3ms(int[], int) Case 2: nums=[1, 0, 1, 1, 0, 1], output=2",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.ArrayNestingTest","","org.example.problems.ArrayNestingTest","testArrayNesting_77ms","testArrayNesting_77ms(int[], int) Case 2: nums=[0, 1, 2], output=1",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.MergeSortedArrayTest","","org.example.problems.MergeSortedArrayTest","merge_1ms","merge_1ms(int[], int, int[], int, int[]) Case 3: nums1=[1, 2, 3, 0, 0, 0], m=3, nums2=[2, 5, 6], n=3, output=[1, 2, 2, 3, 5, 6]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.MaximumSumOfTwoNonOverlappingSubarraysTest","","org.example.problems.MaximumSumOfTwoNonOverlappingSubarraysTest","maxSumTwoNoOverlap_3ms","maxSumTwoNoOverlap_3ms(int[], int, int, int) Case 2: nums=[3, 8, 1, 3, 2, 1, 8, 9, 0], firstLen=3, secondLen=2, output=29",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.LargestTimeForGivenDigitsTest","","org.example.problems.LargestTimeForGivenDigitsTest","testLargestTimeFromDigits","testLargestTimeFromDigits(int[], String) Case 2: arr=[4, 3, 2, 1], output=23:41",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","3","","org.example.problems.MatrixCellsInDistanceOrderTest","","org.example.problems.MatrixCellsInDistanceOrderTest","testAllCellsDistOrder_24ms","testAllCellsDistOrder_24ms(int, int, int, int, int[][]) Case 1: rows=1, cols=2, rCenter=0, cCenter=0, output=[[0, 0], [0, 1]]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.HIndexTest","","org.example.problems.HIndexTest","testHIndex","testHIndex(int[], int) Case 1: citations=[3, 0, 6, 1, 5], output=3",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.LongestIncreasingSubsequenceTest","","org.example.problems.LongestIncreasingSubsequenceTest","testLengthOfLIS_13ms","testLengthOfLIS_13ms(int[], int) Case 2: nums=[0, 1, 0, 3, 2, 3], output=4",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.LargestNumberAtLeastTwiceOfOthersTest","","org.example.problems.LargestNumberAtLeastTwiceOfOthersTest","dominantIndex_1ms","dominantIndex_1ms(int[], int) Case 1: nums=[3, 6, 1, 0], output=1",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.MaximumSwapTest","","org.example.problems.MaximumSwapTest","testMaximumSwap_0ms","testMaximumSwap_0ms(int, int) Case 2: num=9973, output=9973",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","7","","org.example.problems.ImageSmootherTest","","org.example.problems.ImageSmootherTest","imageSmoother_9ms","imageSmoother_9ms(int[][], int[][]) Case 1: img=[[1, 1, 1], [1, 0, 1], [1, 1, 1]], output=[[0, 0, 0], [0, 0, 0], [0, 0, 0]]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.MergeSortedArrayTest","","org.example.problems.MergeSortedArrayTest","merge_1ms","merge_1ms(int[], int, int[], int, int[]) Case 2: nums1=[0], m=0, nums2=[1], n=1, output=[1]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.ArrayNestingTest","","org.example.problems.ArrayNestingTest","testArrayNesting_77ms","testArrayNesting_77ms(int[], int) Case 1: nums=[5, 4, 0, 3, 1, 6, 2], output=4",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.BattleShipsInABoardTest","","org.example.problems.BattleShipsInABoardTest","testCountBattleships_121ms","testCountBattleships_121ms(char[][], int) Case 2: board=[[.]], output=0",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.IncreasingTripletSubsequenceTest","","org.example.problems.IncreasingTripletSubsequenceTest","increasingTriplet_2ms","increasingTriplet_2ms(int[], boolean) Case 3: nums=[2, 1, 5, 0, 4, 6], output=true",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.MaxProductOfThreeNumbersTest","","org.example.problems.MaxProductOfThreeNumbersTest","maximumProduct_3ms","maximumProduct_3ms(int[], int) Case 3: num=[-1, -2, -3], output=-6",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","7","","org.example.problems.CardFlippingGameTest","","org.example.problems.CardFlippingGameTest","testFlipgame_6ms","testFlipgame_6ms(int[], int[], int) Case 2: fronts=[1], backs=[1], output=0",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.LargestTimeForGivenDigitsTest","","org.example.problems.LargestTimeForGivenDigitsTest","testLargestTimeFromDigits","testLargestTimeFromDigits(int[], String) Case 1: arr=[1, 2, 3, 4], output=23:41",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.InsertIntervalTest","","org.example.problems.InsertIntervalTest","testInsert_1ms","testInsert_1ms(int[][], int[], int[][]) Case 2: intervals=[[1, 2], [3, 5], [6, 7], [8, 10], [12, 16]], newInterval=[4, 8], output=[[1, 2], [3, 10], [12, 16]]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.LongestIncreasingSubsequenceTest","","org.example.problems.LongestIncreasingSubsequenceTest","testLengthOfLIS_13ms","testLengthOfLIS_13ms(int[], int) Case 1: nums=[10, 9, 2, 5, 3, 7, 101, 18], output=4",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.ChampagneTowerTest","","org.example.problems.ChampagneTowerTest","testChampagneTower","testChampagneTower(int, int, int, double) Case 3: poured=100000009, queryRow=33, queryGlass=17, output=1.0",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","3","","org.example.problems.MatrixCellsInDistanceOrderTest","","org.example.problems.MatrixCellsInDistanceOrderTest","testAllCellsDistOrder_4ms","testAllCellsDistOrder_4ms(int, int, int, int, int[][]) Case 1: rows=1, cols=2, rCenter=0, cCenter=0, output=[[0, 0], [0, 1]]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.LongestIncreasingSubsequenceTest","","org.example.problems.LongestIncreasingSubsequenceTest","testLengthOfLIS_13ms","testLengthOfLIS_13ms(int[], int) Case 3: nums=[7, 7, 7, 7, 7, 7, 7], output=1",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.IncreasingTripletSubsequenceTest","","org.example.problems.IncreasingTripletSubsequenceTest","increasingTriplet_2ms","increasingTriplet_2ms(int[], boolean) Case 2: nums=[5, 4, 3, 2, 1], output=false",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.MergeIntervalsTest","","org.example.problems.MergeIntervalsTest","merge_11ms","merge_11ms(int[][], int[][]) Case 2: intervals=[[1, 4], [4, 5]], output=[[1, 5]]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","3","","org.example.problems.AddToArrayFormOfIntegerTest","","org.example.problems.AddToArrayFormOfIntegerTest","testAddToArrayForm_2ms","testAddToArrayForm_2ms(int[], int, List) Case 1: num=[1, 2, 0, 0], k=34, output=[1, 2, 3, 4]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.CanPlaceFlowersTest","","org.example.problems.CanPlaceFlowersTest","testCanPlaceFlowers","testCanPlaceFlowers(int[], int, boolean) Case 2: flowerbed=[1, 0, 0, 0, 1], n=2, output=false",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","4","","org.example.problems.KEmptySlotsTest","","org.example.problems.KEmptySlotsTest","testKEmptySlots","testKEmptySlots(int[], int, int) Case 1: flowers=[1, 3, 2], k=2, output=3",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","4","","org.example.problems.CardFlippingGameTest","","org.example.problems.CardFlippingGameTest","testFlipgame_26ms","testFlipgame_26ms(int[], int[], int) Case 2: fronts=[1], backs=[1], output=0",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.LargestTimeForGivenDigitsTest","","org.example.problems.LargestTimeForGivenDigitsTest","testLargestTimeFromDigits","testLargestTimeFromDigits(int[], String) Case 4: arr=[3, 3, 1, 3], output=13:33",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.ChampagneTowerTest","","org.example.problems.ChampagneTowerTest","testChampagneTower","testChampagneTower(int, int, int, double) Case 2: poured=2, queryRow=1, queryGlass=1, output=0.5",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.MaxConsecutiveOnesTest","","org.example.problems.MaxConsecutiveOnesTest","testFindMaxConsecutiveOnes_3ms","testFindMaxConsecutiveOnes_3ms(int[], int) Case 1: nums=[1, 1, 0, 1, 1, 1], output=3",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","158","","org.example.problems.EmployeeFreeTimeTest","","org.example.problems.EmployeeFreeTimeTest","testEmployeeFreeTime","testEmployeeFreeTime(List, List) Case 1: schedule=[[Interval{start=45, end=56}, Interval{start=89, end=96}], [Interval{start=5, end=21}, Interval{start=57, end=74}]], output=[Interval{start=21, end=45}, Interval{start=56, end=57}, Interval{start=74, end=89}]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.MatrixCellsInDistanceOrderTest","","org.example.problems.MatrixCellsInDistanceOrderTest","testAllCellsDistOrder_24ms","testAllCellsDistOrder_24ms(int, int, int, int, int[][]) Case 3: rows=2, cols=3, rCenter=1, cCenter=2, output=[[1, 2], [0, 2], [1, 1], [0, 1], [1, 0], [0, 0]]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.FruitIntoBasketsTest","","org.example.problems.FruitIntoBasketsTest","testTotalFruit_50ms","testTotalFruit_50ms(int[], int) Case 2: fruits=[0, 1, 2, 2], output=3",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.FirstMissingPositiveTest","","org.example.problems.FirstMissingPositiveTest","testFirstMissingPositive_13ms","testFirstMissingPositive_13ms(int[], int) Case 1: nums=[1, 2, 0], output=3",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.AddToArrayFormOfIntegerTest","","org.example.problems.AddToArrayFormOfIntegerTest","testAddToArrayForm_89ms","testAddToArrayForm_89ms(int[], int, List) Case 3: num=[2, 1, 5], k=806, output=[1, 0, 2, 1]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.LargestNumberAtLeastTwiceOfOthersTest","","org.example.problems.LargestNumberAtLeastTwiceOfOthersTest","dominantIndex_1ms","dominantIndex_1ms(int[], int) Case 2: nums=[3, 6, 1, 0], output=1",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.AddToArrayFormOfIntegerTest","","org.example.problems.AddToArrayFormOfIntegerTest","testAddToArrayForm_2ms","testAddToArrayForm_2ms(int[], int, List) Case 2: num=[2, 7, 4], k=181, output=[4, 5, 5]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","3","","org.example.problems.FindPivotIndexTest","","org.example.problems.FindPivotIndexTest","testPivotIndex_1ms","testPivotIndex_1ms(int[], int) Case 1: nums=[1, 7, 3, 6, 5, 6], output=3",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","3","","org.example.problems.MaximumSwapTest","","org.example.problems.MaximumSwapTest","testMaximumSwap_0ms","testMaximumSwap_0ms(int, int) Case 1: num=2736, output=7236",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","3","","org.example.problems.FindPivotIndexTest","","org.example.problems.FindPivotIndexTest","testPivotIndex_1ms","testPivotIndex_1ms(int[], int) Case 3: nums=[2, 1, -1], output=0",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.MeetingRoomsTest","","org.example.problems.MeetingRoomsTest","testCanAttendMeetings","testCanAttendMeetings(Interval[], boolean) Case 2: intervals=[org.example.problems.MeetingRooms$Interval@3ab595c8, org.example.problems.MeetingRooms$Interval@2365ea38, org.example.problems.MeetingRooms$Interval@cbf1997], output=true",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.MeetingSchedulerTest","","org.example.problems.MeetingSchedulerTest","minAvailableDuration","minAvailableDuration(int[][], int[][], int, List) Case 2: slots1=[[10, 50], [60, 120], [140, 210]], slots2=[[0, 15], [60, 70]], duration=12, output=[]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.HIndexTest","","org.example.problems.HIndexTest","testHIndex","testHIndex(int[], int) Case 2: citations=[1, 3, 1], output=1",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.AddToArrayFormOfIntegerTest","","org.example.problems.AddToArrayFormOfIntegerTest","testAddToArrayForm_89ms","testAddToArrayForm_89ms(int[], int, List) Case 2: num=[2, 7, 4], k=181, output=[4, 5, 5]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","17","","org.allure.junit5_github_actions.StepTest","","org.allure.junit5_github_actions.StepTest","annotatedStepTest","annotatedStepTest()",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.MaximumSumOfTwoNonOverlappingSubarraysTest","","org.example.problems.MaximumSumOfTwoNonOverlappingSubarraysTest","maxSumTwoNoOverlap_3ms","maxSumTwoNoOverlap_3ms(int[], int, int, int) Case 3: nums=[2, 1, 5, 6, 0, 9, 5, 0, 3, 8], firstLen=4, secondLen=3, output=31",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.FirstMissingPositiveTest","","org.example.problems.FirstMissingPositiveTest","testFirstMissingPositive_2ms","testFirstMissingPositive_2ms(int[], int) Case 3: nums=[7, 8, 9, 11, 12], output=1",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","11","","org.example.problems.ChampagneTowerTest","","org.example.problems.ChampagneTowerTest","testChampagneTower","testChampagneTower(int, int, int, double) Case 1: poured=1, queryRow=1, queryGlass=1, output=0.0",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.MergeSortedArrayTest","","org.example.problems.MergeSortedArrayTest","merge_0ms","merge_0ms(int[], int, int[], int, int[]) Case 2: nums1=[0], m=0, nums2=[1], n=1, output=[1]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.MergeIntervalsTest","","org.example.problems.MergeIntervalsTest","merge_11ms","merge_11ms(int[][], int[][]) Case 1: intervals=[[1, 3], [2, 6], [8, 10], [15, 18]], output=[[1, 6], [8, 10], [15, 18]]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.AddToArrayFormOfIntegerTest","","org.example.problems.AddToArrayFormOfIntegerTest","testAddToArrayForm_2ms","testAddToArrayForm_2ms(int[], int, List) Case 3: num=[2, 1, 5], k=806, output=[1, 0, 2, 1]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.IncreasingTripletSubsequenceTest","","org.example.problems.IncreasingTripletSubsequenceTest","increasingTriplet_2ms","increasingTriplet_2ms(int[], boolean) Case 1: nums=[1, 2, 3, 4, 5], output=true",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.MergeSortedArrayTest","","org.example.problems.MergeSortedArrayTest","merge_0ms","merge_0ms(int[], int, int[], int, int[]) Case 3: nums1=[1, 2, 3, 0, 0, 0], m=3, nums2=[2, 5, 6], n=3, output=[1, 2, 2, 3, 5, 6]",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","5","","org.example.problems.CanPlaceFlowersTest","","org.example.problems.CanPlaceFlowersTest","testCanPlaceFlowers","testCanPlaceFlowers(int[], int, boolean) Case 1: flowerbed=[1, 0, 0, 0, 1], n=1, output=true",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.BattleShipsInABoardTest","","org.example.problems.BattleShipsInABoardTest","testCountBattleships_121ms","testCountBattleships_121ms(char[][], int) Case 1: board=[[X, ., ., X], [., ., ., X], [., ., ., X]], output=2",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.MaxConsecutiveOnes2Test","","org.example.problems.MaxConsecutiveOnes2Test","testFindMaxConsecutiveOnes","testFindMaxConsecutiveOnes(int[], int) Case 1: nums=[1, 0, 1, 1, 0], output=4",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","2","","org.example.problems.BestMeetingPointTest","","org.example.problems.BestMeetingPointTest","testMinTotalDistance","testMinTotalDistance(int[][], int) Case 1: grid=[[1, 0, 0, 0, 1], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]], output=6",""
"passed","Fri Nov 22 21:16:35 GMT 2024","Fri Nov 22 21:16:35 GMT 2024","1","","org.example.problems.MatrixCellsInDistanceOrderTest","","org.example.problems.MatrixCellsInDistanceOrderTest","testAllCellsDistOrder_4ms","testAllCellsDistOrder_4ms(int, int, int, int, int[][]) Case 2: rows=2, cols=2, rCenter=0, cCenter=1, output=[[0, 1], [0, 0], [1, 1], [1, 0]]",""
